window.docContents[40].resolve({"/Probability-spaces-and-probability-measures/#Probability-in-Mathlib--Probability-spaces-and-probability-measures":{"contents":"First, in order to work on probability we need a measurable space.\nWe can define a probability measure on such a space as follows.\n\n\n\nThe class MeasurableSpace Ω defines a sigma-algebra on Ω. We then introduced a measure P on that sigma-algebra and specified that it should be a probability measure.\nIf we want to work on ℝ or another well known type the typeclass inference system will find [MeasurableSpace ℝ] on its own. We can write simply\n\n\n\nWith the code above, we can introduce several probability measures on the same space. When using lemmas and definitions about those measures, we will need to specify which measure we are talking about.\nFor example, the variance of a random variable X with respect to the measure P will be variance X P.\n\nBut perhaps we just want a space with a canonical probability measure, which would be the one used without us having to tell Lean explicitly.\nThat can be done with the MeasureSpace class. A MeasureSpace is a MeasurableSpace with a canonical measure called volume.\nThe probability library of Mathlib defines a notation ℙ for that measure. We still need to tell that we want it to be a probability measure though.\n\n\n\nRemark 1: in the code above we can't write only [IsProbabilityMeasure ℙ] because Lean would then not know to which space the default measure ℙ refers to.\nThat will not be necessary when we use ℙ in proofs because the context will be enough to infer Ω.\n\nRemark 2: a lemma written for P : Measure Ω in a MeasurableSpace Ω will apply for the special measure ℙ in a MeasureSpace Ω, but the converse is not true.\nMathlib focuses on generality, hence uses the MeasurableSpace spelling for its lemmas. In another context, the convenience of MeasureSpace may be preferable.\n\nRemark 3: IsProbabilityMeasure vs ProbabilityMeasure.\nThe examples above used {P : Measure Ω} [IsProbabilityMeasure P] to define a probability measure. That's the standard way to do it.\nMathlib also contains a type ProbabilityMeasure Ω: the subtype of measures that are probability measures.\nThe goal of that type is to work on the set of probability measures on Ω.\nIn particular, it comes with a topology, the topology of convergence in distribution (weak convergence of measures).\nIf we don't need to work with that topology, {P : Measure Ω} [IsProbabilityMeasure P] should be preferred.\n\n\n\n\n\n\n\n\n\n","context":"Probability in Mathlib","header":"1. Probability spaces and probability measures","id":"/Probability-spaces-and-probability-measures/#Probability-in-Mathlib--Probability-spaces-and-probability-measures"}});